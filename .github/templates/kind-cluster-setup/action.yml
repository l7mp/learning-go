name: "Kind setup"
description: "Installs and sets up a running kind cluster, including the cloud-provider-kind and istio for service mesh"
inputs:
  istio:
    description: "A flag weather to start the istio service mash"
    default: 'false'
    required: false
runs:
  using: composite
  steps:
    - name: Install kind and start cluster
      uses: helm/kind-action@v1
      with:
        cluster_name: test
        kubectl_version: 'v1.29.3'

    - name: Load images to node(s)
      shell: bash
      run: |
        for i in $(docker images --format "{{.Repository}}:{{.Tag}}" | grep ':test'); do
          kind load docker-image -n test ${i}
        done

    - name: Check if cloud provider is cached
      id: cpvd
      uses: actions/cache@v4
      with:
        path: ~/go/bin/cloud-provider-kind
        key: cpvd-cache

    - name: Install cloud-provider-kind
      if: steps.cpvd.outputs.cache-hit != 'true'
      shell: bash
      run: go install sigs.k8s.io/cloud-provider-kind@latest

    - name: Save cloud-provider-cache
      uses: actions/cache/save@v4
      with:
        path: ~/go/bin/cloud-provider-kind
        key: cpvd-cache

    - name: Start cloud-provider-kind in background
      shell: bash
      run: cloud-provider-kind &

    - name: Start istio service mash
      if: inputs.istio == 'true'
      shell: bash
      run: |
        curl -L https://istio.io/downloadIstio | sh -
        cd istio*
        kubectl kustomize "github.com/kubernetes-sigs/gateway-api/config/crd?ref=v1.0.0" | kubectl apply -f -
        bin/istioctl install --set profile=minimal -y
        kubectl label namespace default istio-injection=enabled --overwrite

